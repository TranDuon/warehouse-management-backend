/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject3.View.PurschaseTransaction;

import com.mycompany.mavenproject3.View.Interface.ViewHasListObjectInterface;
import com.mycompany.mavenproject3.View.Interface.ViewHasObjectInterface;
import com.mycompany.mavenproject3.Db.PurschaseOrderItem.Entity.PurschaseOrderItem;
import com.mycompany.mavenproject3.Db.PurschaseOrderItem.Entity.PurschaseOrderItemId;
import com.mycompany.mavenproject3.Db.PurschaseTransaction.Entity.PurschaseTransaction;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author azoom
 */
public class DetailsPurschaseTransactionView 
        extends javax.swing.JFrame 
        implements 
            ViewHasListObjectInterface<PurschaseOrderItemHasNameProduct>,
            ViewHasObjectInterface<PurschaseTransaction>
{

    /**
     * Creates new form DetailsMotLuotBanView
     */
    public DetailsPurschaseTransactionView() {
        initComponents();
    }

    @Override
    public void setListObjectAndReload(List<PurschaseOrderItemHasNameProduct> dsT) {
        this.detailsMotLuotNhapViewList = dsT;
        this.reloadListObjectOnView();
    }

    @Override
    public List<PurschaseOrderItemHasNameProduct> getListObjectFromView() {
        DefaultTableModel model = (DefaultTableModel) this.table.getModel();
        Integer sohang = model.getRowCount();
        
        List<PurschaseOrderItemHasNameProduct> list= new ArrayList<>();
        for(int i=0; i<sohang; i++){
            PurschaseOrderItemHasNameProduct t = new PurschaseOrderItemHasNameProduct(
                    new PurschaseOrderItem(
                            new PurschaseOrderItemId(
                                    Long.valueOf(model.getValueAt(i, 0).toString()),
                                    Long.valueOf(model.getValueAt(i, 2).toString())
                            ),
                            Integer.valueOf(model.getValueAt(i, 3).toString()),
                            Long.valueOf(model.getValueAt(i, 4).toString())
                    ),
                    model.getValueAt(i, 1).toString()
            );
            
            list.add(t);
        }
        return list;
    }

    @Override
    public void reloadListObjectOnView() {
        DefaultTableModel model = (DefaultTableModel) this.table.getModel();
        model.setRowCount(0);
        
        for(PurschaseOrderItemHasNameProduct t : this.detailsMotLuotNhapViewList){
            model.addRow(
                    new Object[]{
                        t.getPurschaseOrderItem().getId().getProductid(),
                        t.getName(),
                        t.getPurschaseOrderItem().getId().getPurschaseTransactionid(),
                        t.getPurschaseOrderItem().getQuantity(),
                        t.getPurschaseOrderItem().getPrice()
                    }
            );
        }
    }

    @Override
    public void hideView() {
        this.setVisible(false);
    }

    @Override
    public void showView() {
        this.setVisible(true);
    }

    @Override
    public void deleteContent() {
//        this.setListObjectAndReload(null);
//        this.setObjectAndReload(null);
        this.id.setText("");
        this.timestamp.setText("");
        this.isPaid.setText("");
        this.useridEmployee.setText("");
        
        DefaultTableModel model = (DefaultTableModel) this.table.getModel();
        model.setRowCount(0);
    }

    @Override
    public void setObjectAndReload(PurschaseTransaction t) {
        this.motLuotNhap = t;
        this.reloadObjectOnView();
    }

    @Override
    public PurschaseTransaction getObjectFromView() {
        PurschaseTransaction t = new PurschaseTransaction(
                Long.valueOf(this.id.getText()),
                Timestamp.valueOf(LocalDateTime.parse(this.timestamp.getText())),
                Boolean.valueOf(this.isPaid.getText()),
                Long.valueOf(this.useridEmployee.getText())
        );
        return t;
    }

    @Override
    public void reloadObjectOnView() {
        this.id.setText(this.motLuotNhap.getId().toString());
        this.timestamp.setText(this.motLuotNhap.getTimestamp().toString());
        this.isPaid.setText(this.motLuotNhap.getIsPaid().toString());
        this.useridEmployee.setText(this.motLuotNhap.getUseridEmployee().toString());
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        timestamp = new javax.swing.JTextField();
        isPaid = new javax.swing.JTextField();
        useridEmployee = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Details mot luot ban");

        jLabel2.setText("id :");

        jLabel3.setText("thoi gian :");

        jLabel4.setText("da thanh toan :");

        jLabel5.setText("id nhan vien :");

        id.setEditable(false);

        timestamp.setEditable(false);

        isPaid.setEditable(false);
        isPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isPaidActionPerformed(evt);
            }
        });

        useridEmployee.setEditable(false);
        useridEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useridEmployeeActionPerformed(evt);
            }
        });

        jLabel6.setText("Danh sach san pham trong luot nhap nay :");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id vat pham", "ten vat pham", "id luot ban", "so luong", "gia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(useridEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(timestamp, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(isPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(187, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timestamp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(useridEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void useridEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useridEmployeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useridEmployeeActionPerformed

    private void isPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isPaidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isPaidActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetailsPurschaseTransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetailsPurschaseTransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetailsPurschaseTransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetailsPurschaseTransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetailsPurschaseTransactionView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField id;
    private javax.swing.JTextField isPaid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable table;
    private javax.swing.JTextField timestamp;
    private javax.swing.JTextField useridEmployee;
    // End of variables declaration//GEN-END:variables
    private List<PurschaseOrderItemHasNameProduct> detailsMotLuotNhapViewList;
    private PurschaseTransaction motLuotNhap;
    
    
//    private static DateTimeFormatter dateTimeFormatter2 = DateTimeFormatter.ofPattern("HH:mm:ss dd/MM/yyyy");

}
